/*------------------------------------*\
    #Buttons
\*------------------------------------*/

/**
1. Because the `.stack` applies flexbox in the column direction,
we need to prevent buttons from stretching horizontally
 */
button,
.button {
	align-self: flex-start; /* 1 */
	border-radius: 0;
	color: inherit;
	font-weight: $font-weight;
	letter-spacing: 0.015em;
	padding: em(10) em(15);
}



/**
2. High contrast themes tend to eliminate background-color. If there is no
border set, we need to apply a transparent outline to maintain the shape
of the button. The negative outline-offset moves the outline inside the
perimeter so it behaves like a border and doesn't add to the overall size.
 */
.button {
	border: 0;
	display: block;
	outline: $size-minus4 solid transparent; /* 2 */
	outline-offset: $size-minus4 * -1; /* 2 */
	text-decoration: none; // Remove link styling from links styled as buttons
}




button.button,
input[type="submit"].button {
	text-decoration: none; // Remove link styling from actual buttons styled as buttons
}




// Double specificity so links as buttons keep their styling even within
// elements that would otherwise override it, without using !important
.button--primary.button--primary {

	background-color: $primary-color;
	color: contrast($primary-color);

	&:visited {

		background-color: $primary-color;
		color: contrast($primary-color);

	}

	&:hover,
	&:focus,
	&:active {

		background-color: deviate($primary-color);
		color: contrast(deviate($primary-color));

	}

}


.button--secondary.button--secondary {

	background-color: $secondary-color;
	color: contrast($secondary-color);

	&:visited {

		background-color: $secondary-color;
		color: contrast($secondary-color);

	}

	&:hover,
	&:focus,
	&:active {

		background-color: deviate($secondary-color);
		color: contrast(deviate($secondary-color));

	}

}


.button--tertiary.button--tertiary {

	background-color: $tertiary-color;
	color: contrast($tertiary-color);

	&:visited {

		background-color: $tertiary-color;
		color: contrast($tertiary-color);

	}

	&:hover,
	&:focus,
	&:active {

		background-color: deviate($tertiary-color);
		color: contrast(deviate($tertiary-color));

	}

}


.button--accent.button--accent {

	background-color: $accent-color;
	color: contrast($accent-color);

	&:visited {

		background-color: $accent-color;
		color: contrast($accent-color);

	}

	&:hover,
	&:focus,
	&:active {

		background-color: deviate($accent-color);
		color: contrast(deviate($accent-color));

	}

}


.button--subtle.button--subtle {

	background-color: $subtle-color;
	color: contrast($subtle-color);

	&:visited {

		background-color: $subtle-color;
		color: contrast($subtle-color);

	}

	&:hover,
	&:focus,
	&:active {

		background-color: deviate($subtle-color);
		color: contrast(deviate($subtle-color));

	}

}


.button--success.button--success {

	background-color: $success-color;
	color: contrast($success-color);

	&:visited {

		background-color: $success-color;
		color: contrast($success-color);

	}

	&:hover,
	&:focus,
	&:active {

		background-color: deviate($success-color);
		color: contrast(deviate($success-color));

	}

}


.button--warning.button--warning {

	background-color: $warning-color;
	color: contrast($warning-color);

	&:visited {

		background-color: $warning-color;
		color: contrast($warning-color);

	}

	&:hover,
	&:focus,
	&:active {

		background-color: deviate($warning-color);
		color: contrast(deviate($warning-color));

	}

}


.button--alert.button--alert {

	background-color: $alert-color;
	color: contrast($alert-color);

	&:visited {

		background-color: $alert-color;
		color: contrast($alert-color);

	}

	&:hover,
	&:focus,
	&:active {

		background-color: deviate($alert-color);
		color: contrast(deviate($alert-color));

	}

}


// For full-width buttons
.button--wide {
	text-align: center;
	width: 100%;
}


// For disabled buttons
.button[disabled],
.button.is-disabled {
	background-color: luma(80);
	box-shadow: none;
	color: rgba(contrast(luma(80)), 0.54);
	cursor: not-allowed;

	&:hover,
	&:focus,
	&:active {

		background-color: luma(80);
		color: rgba(contrast(luma(80)), 0.54);
		outline: 0;

	}

}
