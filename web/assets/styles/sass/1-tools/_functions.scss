$pi: 3.1415926535897932384626433832795028841971693993751;
$Ï€: $pi;
$e: 2.71828182845904523536028747135266249775724709369995;

$iter: 50;
/*
 * ===========================================================================
 *
 * CSS integer value functions
 *
 * ===========================================================================
 *
 */



/*------------------------------------*\
    #em
\*------------------------------------*/
@function em($target, $context: $font-size) {
	@return $target/$context +em
}



/*------------------------------------*\
    #rem
\*------------------------------------*/
@function rem($target, $context: $font-size) {
	@return $target/$context +rem
}



/*------------------------------------*\
    #px
\*------------------------------------*/
@function px($target, $context: $font-size) {
	@return $target*$context +px
}



/*------------------------------------*\
    #Return a number without a unit
\*------------------------------------*/
@function number($target, $context: $font-size) {
	@return $target/$context
}



/*------------------------------------*\
    #Remove any unit that is present and return unitless number
\*------------------------------------*/
@function unitless($number) {
	@return $number / ($number * 0 + 1);
}



/*------------------------------------*\
    #Calculate new leading from contextual font-size
\*------------------------------------*/
@function leading($number, $context: $font-size) {
	@return $number / ($context);
}



/*------------------------------------*\
    #Luma
\*------------------------------------*/
@function luma($number) {
	@return mix($white, $black, ($number + 0%));
}



/*------------------------------------*\
    #Deviate, calculate lighter or darker variation of hue
\*------------------------------------*/
@function deviate(
	$hue,
    $deviate: $deviate

) {
	@if (brightness($hue) < 99-$deviate +0%) {
		@return lighten($hue, $deviate);
	}
	@else {
		@return darken($hue, $deviate);
	}
}



/*------------------------------------*\
    #Subtle, does the opposite of deviate()
\*------------------------------------*/
@function subtle(
	$hue,
    $deviate: $deviate

) {
	@if (brightness($hue) < 1+$deviate +0%) {
		@return lighten($hue, $deviate);
	}
	@else {
		@return darken($hue, $deviate);
	}
}


/*
 * ===========================================================================
 *
 * Math functions
 *
 * ===========================================================================
 *
 */
/*
 * rand()
 *
 * Working from http://xkcd.com/221/
 * Chosen by fair dice roll.
 * Guarenteed to be random.
 *
 */
@function rand() {
  @return 4;
}
/*
* pow()
*/
@function pow($val, $pow) {
	$res: 1;
	@while($pow > 0) {
		$res: $res * $val;
		$pow: $pow - 1;
	}
	@return $res;
}
/*
 * sqrt
 */
@function sqrt($number) {
  $guess: rand();
  $root: $guess;
  @for $i from 1 through $iter {
    $root: $root - (pow($root, 2) - $number) / (2 * $root);
  }
  @return $root;
}
